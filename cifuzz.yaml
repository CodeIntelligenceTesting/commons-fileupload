# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Configuration for a CI Fuzz project
## Generated on 2022-11-13

## The build system used to build this project. If not set, cifuzz tries
## to detect the build system automatically.
## Valid values: "bazel", "cmake", "maven", "gradle", "other".
build-system: maven

## If the build system type is "other", this command is used by
## `cifuzz run` to build the fuzz test.
#build-command: "mvn -Drat.numUnapprovedLicenses=100 -Drat.skip=true package -DskipTests"

## Directories containing sample inputs for the code under test.
## See https://llvm.org/docs/LibFuzzer.html#corpus and
## https://aflplus.plus/docs/fuzzing_in_depth/#a-collecting-inputs.
seed-corpus-dirs:
 - /home/roman/git/corpus2

## A file containing input language keywords or other interesting byte
## sequences. See https://llvm.org/docs/LibFuzzer.html#dictionaries and
## https://github.com/AFLplusplus/AFLplusplus/blob/stable/dictionaries/README.md.
#dict: path/to/dictionary.dct

## Command-line arguments to pass to the fuzzing engine (libFuzzer or
## AFL++). See https://llvm.org/docs/LibFuzzer.html#options and
## https://www.mankier.com/8/afl-fuzz.
engine-args:
 - -rss_limit_mb=4096
 - -use_value_profile=1
# - -jvm_args="-Xss921k -Xmx2048m"
# - -help=1

## Maximum time to run fuzz tests. The default is to run indefinitely.
#timeout: 30m

## By default, fuzz tests are executed in a sandbox to prevent accidental
## damage to the system. Set to false to run fuzz tests unsandboxed.
## Only supported on Linux.
#use-sandbox: false

## Recover from findings of the UndefinedBehaviorSanitizer and continue
## fuzzing. Note that when using this option, no crashing input is
## stored for findings of the UndefinedBehaviorSanitizer.
#recover-ubsan: true

## Set to true to print output of the `cifuzz run` command as JSON.
#print-json: true

## Set to true to disable desktop notifications
#no-notifications: true
